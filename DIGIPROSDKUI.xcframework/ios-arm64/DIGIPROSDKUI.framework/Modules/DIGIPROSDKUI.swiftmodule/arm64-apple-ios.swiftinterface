// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name DIGIPROSDKUI
import CoreLocation
import DIGIPROSDK
import DIGIPROSDKATO
import DIGIPROSDKSO
@_exported import DIGIPROSDKUI
import Eureka
import Foundation
import LocalAuthentication
import MapKit
import Swift
import UIKit
import UserNotifications
import WebKit
@objc @_inheritsConvenienceInitializers public class CalculadoraCollectionCell : UIKit.UICollectionViewCell {
  @objc override dynamic public func awakeFromNib()
  @objc deinit
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
@objc @_inheritsConvenienceInitializers public class LocalDataCellView : UIKit.UITableViewCell {
  @objc deinit
  @available(iOS 3.0, *)
  @objc override dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
@objc @_inheritsConvenienceInitializers public class DataViewController : UIKit.UIViewController, UserNotifications.UNUserNotificationCenterDelegate {
  @objc @IBOutlet public var btnFlujos: UIKit.UIButton!
  public func performNuevaPlantilla(_ navigation: UIKit.UINavigationController)
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func didReceiveMemoryWarning()
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension DataViewController : DIGIPROSDK.DZNEmptyDataSetSource, DIGIPROSDK.DZNEmptyDataSetDelegate {
  @objc dynamic public func title(forEmptyDataSet scrollView: UIKit.UIScrollView) -> Foundation.NSAttributedString?
  @objc dynamic public func description(forEmptyDataSet scrollView: UIKit.UIScrollView) -> Foundation.NSAttributedString?
  @objc dynamic public func image(forEmptyDataSet scrollView: UIKit.UIScrollView) -> UIKit.UIImage?
  @objc dynamic public func buttonTitle(forEmptyDataSet scrollView: UIKit.UIScrollView, for state: UIKit.UIControl.State) -> Foundation.NSAttributedString?
}
extension DataViewController : UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @objc dynamic public func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreGraphics.CGFloat
  @objc dynamic public func pdfAction(_ sender: UIKit.UIButton)
  @objc dynamic public func trashAction(_ sender: UIKit.UIButton)
  @objc dynamic public func downloadAction(_ sender: UIKit.UIButton)
  @objc dynamic public func lockAction(_ sender: UIKit.UIButton)
  @objc dynamic public func unlockAction(_ sender: UIKit.UIButton)
  public func setCurrentFormIphone(_ index: Swift.Int, _ isPreview: Swift.Bool = false)
  public func setCurrentFormIphone(_ formato: DIGIPROSDK.FEFormatoData, _ isPreview: Swift.Bool = false)
  @objc dynamic public func previewAction(_ sender: UIKit.UIButton)
  @objc dynamic public func editAction(_ sender: UIKit.UIButton)
  @objc dynamic public func helpAction(_ sender: UIKit.UIButton)
  @objc dynamic public func transitAction(_ sender: UIKit.UIButton)
}
extension DataViewController : UIKit.UISearchBarDelegate {
  @objc dynamic public func searchBarSearchButtonClicked(_ searchBar: UIKit.UISearchBar)
}
extension DataViewController : DIGIPROSDK.TemplateDelegate {
  public func didFormatViewFinish(error: Foundation.NSError?)
}
extension DataViewController : DIGIPROSDK.APIDelegate {
  @objc dynamic public func didFormatoTransited(index: ObjectiveC.NSInteger, formato: DIGIPROSDK.FEFormatoData, isInEdition: Swift.Bool)
  @objc dynamic public func didSendToServerFormatos()
  @objc dynamic public func didSendToServerAnexos()
  @objc dynamic public func sendStatus(message: Swift.String, error: DIGIPROSDK.enumErrorType, isLog: Swift.Bool, isNotification: Swift.Bool)
  @objc dynamic public func sendStatusCompletition(initial: Swift.Float, current: Swift.Float, final: Swift.Float)
  @objc dynamic public func sendStatusCodeMessage(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc dynamic public func errorPDFResponse(message: Swift.String)
  @objc dynamic public func errorDescargaResponse(message: Swift.String)
  @objc dynamic public func didSendError(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc dynamic public func didSendResponse(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc dynamic public func didSendResponseHUD(message: Swift.String, error: DIGIPROSDK.enumErrorType, porcentage: Swift.Int)
  @objc dynamic public func didSendResponseStatus(title: Swift.String, subtitle: Swift.String, porcentage: Swift.Float)
}
extension DataViewController : DIGIPROSDK.ControllerDelegate {
  public func performConsultaViewController(_ index: Swift.Int)
  public func performNuevoFeViewController(_ plantilla: DIGIPROSDK.FEPlantillaData, _ index: Swift.Int)
  public func performFlowSelection(_ index: Swift.Int)
  public func updatePlantillas()
}
@objc @_inheritsConvenienceInitializers public class BugsViewController : UIKit.UIViewController {
  public var auxLogsGeol: Swift.Bool
  @objc override dynamic public func viewDidLoad()
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension NuevaPlantillaViewController {
  public func resolveCategory(_ ruleValue: Swift.String, _ subjectValue: Swift.String, _ category: Swift.String) -> Swift.Bool
  public func resolveValor(_ id: Swift.String, _ mode: Swift.String, _ string: Swift.String, _ category: Swift.String? = nil) -> Swift.Bool
  public func resolveValorQR(_ namePrellenado: Swift.String, _ idQRgenerado: Swift.String) -> Swift.Bool
}
@objc @_inheritsConvenienceInitializers public class SecondViewController : UIKit.UIViewController, UIKit.UIApplicationDelegate, UserNotifications.UNUserNotificationCenterDelegate {
  @objc @IBOutlet weak public var imageOne: UIKit.UIImageView!
  @objc @IBOutlet weak public var imageTwo: UIKit.UIImageView!
  @objc @IBOutlet weak public var imageThree: UIKit.UIImageView!
  @objc @IBOutlet weak public var imageFour: UIKit.UIImageView!
  @objc @IBOutlet weak public var imageFive: UIKit.UIImageView!
  @objc @IBOutlet weak public var imageSix: UIKit.UIImageView!
  @objc @IBOutlet weak public var switchControl: UIKit.UISwitch!
  @objc @IBOutlet weak public var titleLabel: UIKit.UILabel!
  @objc @IBOutlet weak public var infoLabel: UIKit.UILabel!
  @objc @IBOutlet weak public var nextButton: UIKit.UIButton!
  @objc @IBOutlet weak public var labelActivate: UIKit.UILabel!
  @objc @IBOutlet weak public var backgroundImage: UIKit.UIImageView!
  @objc @IBOutlet weak public var iconImage: UIKit.UIImageView!
  @objc @IBOutlet weak public var notificationLabel: UIKit.UILabel!
  @objc @IBOutlet weak public var lineViewOne: UIKit.UIView!
  @objc @IBOutlet weak public var lineViewTwo: UIKit.UIView!
  public var flag: Swift.Bool
  public var notification: Swift.Bool
  public static var shared: DIGIPROSDKUI.SecondViewController
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  public func registerForPushNotifications()
  @objc public func registerNotification(sender: Foundation.NSNotification)
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension NuevaPlantillaViewController {
  public func obtainJsonComponent(id: Swift.String) -> Foundation.NSMutableDictionary
  public func obtainComponetsGeneric(_ element: Swift.String)
  public func obtainComponents(_ element: Swift.String)
  public func setOCRDetails(_ service: Swift.Int, _ object: Swift.AnyObject, _ element: Swift.String)
  public func removeVowels(input: Swift.String) -> Swift.String
}
public protocol NuevaPlantillaViewControllerDelegate {
  func reloadContEstatico()
}
public typealias BackFromSuccessBiometricLocal = (Foundation.NSString) -> ()
@objc @_inheritsConvenienceInitializers public class NuevaPlantillaViewController : Eureka.FormViewController, DIGIPROSDK.FormularioDelegate, UIKit.UIGestureRecognizerDelegate, DIGIPROSDKUI.NuevaPlantillaViewControllerDelegate, UIKit.UIPopoverPresentationControllerDelegate, CoreLocation.CLLocationManagerDelegate, UIKit.UISearchBarDelegate {
  public var completionBlockLocalBiometric: DIGIPROSDKUI.BackFromSuccessBiometricLocal?
  public var formActions: DIGIPROSDK.FormManager<DIGIPROSDKUI.NuevaPlantillaViewController>?
  public var sdkAPI: DIGIPROSDK.APIManager<DIGIPROSDKUI.NuevaPlantillaViewController>?
  public var navigation: UIKit.UINavigationController?
  public var elementsForValidate: [Swift.String]
  public var ElementosArray: Foundation.NSMutableDictionary
  public var valuesArray: Swift.Array<Swift.String>?
  public var filtrosArray: Swift.Array<Swift.String>?
  public var imageCollector: [(id: Swift.String, value: Swift.String, desc: Swift.String)]
  public var flujo: Swift.Int
  public var proceso: Swift.Int
  public var index: Swift.Int
  public var allIndex: Swift.Int
  public var formCounter: Swift.Int
  public var currentPage: Swift.Int
  public var tapped: Swift.Bool
  public var pageSelected: Swift.Int
  public var isGrantedPremissions: Swift.Bool
  public var arrayPlantillaData: DIGIPROSDK.FEPlantillaData
  public var xmlParsed: DIGIPROSDK.Elemento
  public var xmlAEXML: DIGIPROSDK.AEXMLDocument
  public var formatoData: DIGIPROSDK.FEFormatoData
  public var formato: DIGIPROSDK.FEConsultaFormato
  public var currentEstadisticas: [DIGIPROSDK.FEEstadistica]
  public var arrayOrder: [Swift.String]
  public var validAnchors: [Swift.String]
  public var isAnexoAdded: Swift.Bool
  public var isAutoEnable: Swift.Bool
  public var plantillamapear: Swift.String
  public var currentAnexos: [DIGIPROSDK.FEAnexoData]
  public var anexosLocales: [(elementoid: Swift.String, anexo: DIGIPROSDK.FEAnexoData)]
  public var anexosRemotos: [(elementoid: Swift.String, anexo: DIGIPROSDK.FEAnexoData)]
  public var currentHijos: [DIGIPROSDK.Elemento]
  public var sectionsDictionary: [Swift.String : Eureka.Form]
  public var forms: [Eureka.Form]
  public var footerForm: Eureka.Form
  public var footerViewController: DIGIPROSDKUI.FooterViewController?
  public var isFooterDetected: Swift.Bool
  public var viewControllerR: DIGIPROSDKUI.RequestSuccessController?
  public var folioEconsubanco: Swift.String
  public var compareFaceFlag: Swift.Bool
  public var plaCot: DIGIPROSDK.FEPlantillaData
  public var formatoCot: DIGIPROSDK.FEFormatoData
  public var formatoFlag: Swift.Bool
  public var openPlantilla: DIGIPROSDK.FEOpenPlantilla
  public var atributosPlantilla: DIGIPROSDK.Atributos_plantilla?
  public var QAElements: [(Swift.String, Swift.Bool)]
  final public let locationManager: CoreLocation.CLLocationManager
  public var wrdNavigation: DIGIPROSDKSO.WizardRow?
  public var valueRuleCoor: Swift.String
  public var flagCot: Swift.Bool
  public var flagBio: Swift.Bool
  final public let warningView: UIKit.UIImageView
  final public let dangerView: UIKit.UIImageView
  public var dictValues: [Swift.String : (docid: Swift.String, valor: Swift.String, valormetadato: Swift.String, tipodoc: Swift.String, metadatostipodoc: Swift.String)]
  @objc @IBOutlet weak public var btnTopView: UIKit.UIButton!
  public var popover: UIKit.UINavigationController?
  public var isTblVwAnimating: Swift.Bool
  public var isDisableTopVw: Swift.Bool
  public var colorDeseado: UIKit.UIColor
  @objc @IBOutlet weak public var btnBack: UIKit.UIButton? {
    @objc get
    @objc set(value)
  }
  @objc public func didSendToServerFormatos()
  public func isVisibleHUD()
  @objc public func didSendError(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponse(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponseHUD(message: Swift.String, error: DIGIPROSDK.enumErrorType, porcentage: Swift.Int)
  @objc public func sendStatus(message: Swift.String, error: DIGIPROSDK.enumErrorType, isLog: Swift.Bool, isNotification: Swift.Bool)
  @objc public func sendStatusCompletition(initial: Swift.Float, current: Swift.Float, final: Swift.Float)
  @objc public func sendStatusCodeMessage(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  public func getColorsErrors(_ type: DIGIPROSDK.enumErrorType) -> [UIKit.UIColor]
  public func getCurrentPage() -> Swift.Int
  public func getValueFromTitleComponent(_ id: Swift.String) -> Swift.String
  public func getValueFromComponent(_ id: Swift.String) -> Swift.String
  public func getAllRowsFromCurrentForm() -> [Eureka.BaseRow]
  public func reloadTableViewFormViewController()
  public func wizardActionTabla(id: Swift.String, validar: Swift.Bool, tipo: Swift.String, atributos: DIGIPROSDK.Atributos_wizard)
  public func wizardAction(id: Swift.String, validar: Swift.Bool, tipo: Swift.String, atributos: DIGIPROSDK.Atributos_wizard) -> Swift.Bool
  public func setTransitOptions(option: Swift.String)
  public func wizardValidation(elementValidation: Swift.String) -> Swift.Bool
  public func wizardTransit(atributos: DIGIPROSDK.Atributos_wizard)
  public func detectErrorsForm()
  @objc public func didSendResponseStatus(title: Swift.String, subtitle: Swift.String, porcentage: Swift.Float)
  public func nextTask(atributos: DIGIPROSDK.Atributos_wizard? = nil)
  public func saveFormWizard(finalizar: Swift.Bool?, evento: DIGIPROSDK.FEEventosFlujo? = nil, flujo: Swift.Int? = 0, proceso: Swift.Int? = 0, opendatend: Swift.Bool? = false, atributos: DIGIPROSDK.Atributos_wizard? = nil)
  @objc public func saveWorksheet()
  public func wizardValidate(isvalid: Swift.Bool) -> Swift.Bool
  public func deleteFormatFromLocal(formato: DIGIPROSDK.FEFormatoData)
  public convenience init(_ template: DIGIPROSDK.TemplateDelegate, _ plantilla: DIGIPROSDK.FEPlantillaData, _ index: Swift.Int, _ isEdited: Swift.Bool)
  public convenience init(_ template: DIGIPROSDK.TemplateDelegate, _ formato: DIGIPROSDK.FEFormatoData, _ index: Swift.Int, _ isEdited: Swift.Bool)
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @objc override dynamic public func didReceiveMemoryWarning()
  public func initForm()
  public func reloadElementsByAction(_ index: Swift.Int)
  public func reloadContEstatico()
  public func setCoordinates()
  public func getElementByIdInAllForms(_ id: Swift.String) -> Eureka.BaseRow?
  public func getSectionByIdInCurrentForm(_ id: Swift.String) -> Eureka.Section?
  public func getElementByIdInCurrentForm(_ id: Swift.String) -> Eureka.BaseRow?
  public func getElementByIdsInAllForms(_ ids: [Swift.String]) -> [Eureka.BaseRow?]
  public func getElementByIdsInCurrentForm(_ ids: [Swift.String]) -> [Eureka.BaseRow?]
  public func initNavigation()
  public func settingNavigationButtons(atributos: DIGIPROSDK.Atributos_wizard)
  @objc override dynamic public func viewWillTransition(to size: CoreGraphics.CGSize, with coordinator: UIKit.UIViewControllerTransitionCoordinator)
  @objc public func popoverPresentationControllerShouldDismissPopover(_ popoverPresentationController: UIKit.UIPopoverPresentationController) -> Swift.Bool
  @objc public func adaptivePresentationStyle(for controller: UIKit.UIPresentationController) -> UIKit.UIModalPresentationStyle
  @objc public func locationManager(_ manager: CoreLocation.CLLocationManager, didUpdateLocations locations: [CoreLocation.CLLocation])
  @objc public func searchBarSearchButtonClicked(_ searchBar: UIKit.UISearchBar)
  @objc deinit
  override public init(style: UIKit.UITableView.Style)
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
}
extension NuevaPlantillaViewController : DIGIPROSDK.APIDelegate {
  public func openForm(tipoDoc: Swift.Int, expId: Swift.Int, flujoId: Swift.Int, piid: Swift.Int, guid: Swift.String)
  public func triggerPlantillaEvents(event: Swift.String)
  public func triggerPageEvents(_ i: Swift.Int)
  public func setPrefilledDataToNewForm(_ id: Swift.String, json: Swift.String = "", elements: Foundation.NSMutableDictionary? = nil)
}
extension NuevaPlantillaViewController {
  public func addEventAction(_ evento: DIGIPROSDK.Expresion)
  public func recursiveCondicionFormula(_ atributos: DIGIPROSDK.Atributos_Expresion, _ condiciones: Swift.Array<DIGIPROSDK.Expresion>)
  public func recursiveTokenFormula(_ formul: Swift.String? = nil, _ dict: [DIGIPROSDK.Formula]? = nil, _ typefrml: Swift.String, _ encoded: Swift.Bool) -> DIGIPROSDK.ReturnFormulaType
  public func getElementANY(_ id: Swift.String) -> (id: Swift.String, type: Swift.String, kind: Any?, element: DIGIPROSDK.Elemento?)
  public func getElementService(_ prefijo: Swift.String, isSalida: Swift.Bool = false) -> [Swift.String : Any]
}
extension NuevaPlantillaViewController {
  public func getColoniasElement(_ sepomex: DIGIPROSDK.SepomexJson) -> DIGIPROSDK.SepoMexResult?
  public func getImagesFromElement(_ compareFaces: DIGIPROSDK.CompareFacesJson) -> DIGIPROSDK.CompareFacesResult?
}
extension NuevaPlantillaViewController {
  public func ejecutaServicioMetodo(_ elemento: [DIGIPROSDK.Formula], _ token: DIGIPROSDK.Formula)
  public func ejecutaServicio(_ servicio: Swift.String, _ elementAny: Any)
  public func ejecutaMetodo(_ servicio: Swift.String, _ elementAny: Any)
  public func detectValidation(elem: DIGIPROSDK.Elemento, route: Swift.String) -> [Swift.String]?
  public func setTablaDataAttributes(valor l: Swift.String, metadato m: Swift.String, idunico i: Swift.String) -> Foundation.NSMutableDictionary
  public func setDataAttributes(valor l: Swift.String, metadato m: Swift.String, habilitado h: Swift.Bool, visible v: Swift.Bool) -> Foundation.NSMutableDictionary
  public func setComboboxTempAttributes(valor l: Swift.String, metadato m: Swift.String, idunico i: Swift.String, catalogoDestino cd: Swift.String) -> Foundation.NSMutableDictionary
  public func setDataDocAttributes(valor l: Swift.String, metadato m: Swift.String, habilitado h: Swift.Bool, visible v: Swift.Bool) -> Foundation.NSMutableDictionary
  public func setDataDateRangeAttributes(valor l: Swift.String, metadato m: Swift.String, metadatoF mf: Swift.String, metadatoI mi: Swift.String, metadatoR mr: Swift.String, visible v: Swift.Bool) -> Foundation.NSMutableDictionary
  public func setDataFirmaFadAttributes(valor l: Swift.String, metadato m: Swift.String, hash h: Swift.String, guidtimestamp g: Swift.String, catalogoID c: Swift.Int, descripcion d: Swift.String, georeferencia ge: Swift.String, fecha f: Swift.String, personafirma pf: Swift.String, acuerdofirma af: Swift.String, dispositivo dv: Swift.String) -> Foundation.NSMutableDictionary
  public func setDataAttachmentAttributes(tipoDoc t: Swift.String, docId d: Swift.String) -> Foundation.NSMutableDictionary
  public func setDataAttachmentValorAttributes(valor l: Swift.String, metadato m: Swift.String, tipoDoc t: Swift.String, docId d: Swift.String) -> Foundation.NSMutableDictionary
  public func setDataFingerAttachmentAttributes(tipodoc c: Swift.String, docid d: Swift.String, cantidad t: Swift.String, score s: Swift.String, scorehuellas sh: Swift.String, reemplazo r: Swift.String, valor l: Swift.String, metadato m: Swift.String, visible v: Swift.Bool, habilitado h: Swift.Bool) -> Foundation.NSMutableDictionary
  public func setTipoDoc(_ e: DIGIPROSDK.Elemento) -> Swift.Int
  public func setMetaAttributes(_ e: DIGIPROSDK.Elemento, _ isPrellenado: Swift.Bool)
}
extension NuevaPlantillaViewController : DIGIPROSDKUI.RequestSuccessControllerDelegate {
  public func didTapSave()
}
extension NuevaPlantillaViewController : DIGIPROSDKUI.SaveRequestScreenControllerDelegate {
  public func didTapAccept()
}
public protocol SaveRequestScreenControllerDelegate {
  func didTapAccept()
}
public typealias ToggleAcept = (Foundation.NSString) -> ()
@objc @_hasMissingDesignatedInitializers public class SaveRequestScreenController : UIKit.UIViewController {
  public var completionBlock: DIGIPROSDKUI.ToggleAcept?
  public var delegate: DIGIPROSDKUI.SaveRequestScreenControllerDelegate!
  public var titlePage: Swift.String
  @objc override dynamic public func loadView()
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc deinit
}
extension SaveRequestScreenController : DIGIPROSDK.APIDelegate {
  @objc dynamic public func sendStatus(message: Swift.String, error: DIGIPROSDK.enumErrorType, isLog: Swift.Bool, isNotification: Swift.Bool)
  @objc dynamic public func sendStatusCodeMessage(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc dynamic public func didSendError(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc dynamic public func didSendResponse(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc dynamic public func didSendResponseHUD(message: Swift.String, error: DIGIPROSDK.enumErrorType, porcentage: Swift.Int)
  @objc dynamic public func sendStatusCompletition(initial: Swift.Float, current: Swift.Float, final: Swift.Float)
}
extension NuevaPlantillaViewController {
  public func resettingForm()
  public func checkLocationPermission()
  public func openSettingApp(message: Swift.String)
  public func loopElement(_ root: DIGIPROSDK.Elemento, _ object: [Swift.String]) -> [Swift.String]?
  public func configureColors()
  public func configureButtons()
  public func getWizardFunctionalityFromTable(_ tag: Swift.String)
  public func detectValuePerformFormula()
  public func detectAttrVisibility(_ row: Eureka.BaseRow) -> Swift.Bool
  public func evaluateAttrEnable(_ row: Eureka.BaseRow, _ enable: Swift.Bool)
  public func getPlantillaTitle() -> Swift.String
  public func getTitleByRow(_ row: Eureka.BaseRow) -> Swift.String
  public func getParentsection(_ rowString: Swift.String) -> DIGIPROSDK.Atributos_seccion?
  public func getTitlePageOrSection(_ rowString: Swift.String) -> Swift.String
  public func setVisibleEnableElementsFromSection(_ tag: Swift.String, _ atributos: DIGIPROSDK.Atributos_seccion, _ forced: Swift.Bool = false, _ isUserAction: Swift.Bool = false)
  public func setEnableElementsFromSection(_ tag: Swift.String, _ atributos: DIGIPROSDK.Atributos_seccion)
  public func setVisibleEnableElementsFromTabber(_ tag: Swift.String, _ atributos: DIGIPROSDK.Atributos_tabber)
  public func getElementsFromSectionToModal(_ tag: Swift.String) -> Eureka.Form
  public func validateRowFromForm(_ row: Eureka.BaseRow)
  public func validationRowsForm(_ index: Swift.Int?, _ elements: [Eureka.BaseRow]?)
  public func getStaticElements() -> [(title: Swift.String, value: Swift.String)]
  public func getValuesJson(_ jsonString: Swift.String = "")
  public func getFormViewControllerDelegate() -> Eureka.FormViewController?
  public func getNavigationController() -> UIKit.UINavigationController?
}
extension NuevaPlantillaViewController {
  public func setNotificationBanner(_ title: Swift.String, _ subtitle: Swift.String, _ style: DIGIPROSDK.BannerStyle, _ color: UIKit.UIColor?, _ text: UIKit.UIColor?)
  public func setNotificationBanner(_ title: Swift.String, _ subtitle: Swift.String, _ style: DIGIPROSDK.BannerStyle, _ direction: DIGIPROSDK.BannerPosition)
  public func setStatusBarNotificationBanner(_ title: Swift.String, _ style: DIGIPROSDK.BannerStyle, _ direction: DIGIPROSDK.BannerPosition)
  public func refreshConstraintsOrLayout()
}
@objc @_inheritsConvenienceInitializers public class FlujoViewController : UIKit.UIViewController, UIKit.UITableViewDelegate, UIKit.UITableViewDataSource, DIGIPROSDK.APIDelegate {
  public var dataviewDelegate: DIGIPROSDK.ControllerDelegate?
  @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @objc override dynamic public func viewDidLoad()
  @objc public func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @objc public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @objc public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc public func tableView(_ tableView: UIKit.UITableView, canEditRowAt indexPath: Foundation.IndexPath) -> Swift.Bool
  @objc public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
  @objc public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreGraphics.CGFloat
  @objc public func sendStatus(message: Swift.String, error: DIGIPROSDK.enumErrorType, isLog: Swift.Bool, isNotification: Swift.Bool)
  @objc public func sendStatusCompletition(initial: Swift.Float, current: Swift.Float, final: Swift.Float)
  @objc public func sendStatusCodeMessage(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendError(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponse(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponseHUD(message: Swift.String, error: DIGIPROSDK.enumErrorType, porcentage: Swift.Int)
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension RequestSuccessController {
  public func addTargetsButtons()
  @objc dynamic public func saveForm()
}
@objc @_inheritsConvenienceInitializers public class FourViewController : UIKit.UIViewController, UIKit.UIApplicationDelegate {
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
@objc @_inheritsConvenienceInitializers public class FormatoGoogleView : UIKit.UIView {
  @objc deinit
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
@objc @_inheritsConvenienceInitializers public class UbicacionFormatoViewController : UIKit.UIViewController, DIGIPROSDK.APIDelegate, UIKit.UITableViewDelegate, UIKit.UITableViewDataSource, MapKit.MKMapViewDelegate {
  @objc public func sendStatus(message: Swift.String, error: DIGIPROSDK.enumErrorType, isLog: Swift.Bool, isNotification: Swift.Bool)
  @objc public func sendStatusCompletition(initial: Swift.Float, current: Swift.Float, final: Swift.Float)
  @objc public func sendStatusCodeMessage(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendError(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponse(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponseHUD(message: Swift.String, error: DIGIPROSDK.enumErrorType, porcentage: Swift.Int)
  public var filteredFormatoData: [DIGIPROSDK.FEFormatoData]
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func didReceiveMemoryWarning()
  @objc public func mapView(_ mapView: MapKit.MKMapView, viewFor annotation: MapKit.MKAnnotation) -> MapKit.MKAnnotationView?
  public func setFormatoMarker()
  public func getJsonFormat(_ formato: DIGIPROSDK.FEFormatoData) -> (lat: Swift.String, lon: Swift.String)?
  @objc public func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @objc public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @objc public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc public func tableView(_ tableView: UIKit.UITableView, canEditRowAt indexPath: Foundation.IndexPath) -> Swift.Bool
  @objc public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
  @objc public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreGraphics.CGFloat
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
@objc @_inheritsConvenienceInitializers public class FooterViewController : Eureka.FormViewController, DIGIPROSDK.APIDelegate {
  @objc public func sendStatus(message: Swift.String, error: DIGIPROSDK.enumErrorType, isLog: Swift.Bool, isNotification: Swift.Bool)
  @objc public func sendStatusCompletition(initial: Swift.Float, current: Swift.Float, final: Swift.Float)
  @objc public func sendStatusCodeMessage(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendError(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponse(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponseHUD(message: Swift.String, error: DIGIPROSDK.enumErrorType, porcentage: Swift.Int)
  public var sdkAPI: DIGIPROSDK.APIManager<DIGIPROSDKUI.FooterViewController>?
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func didReceiveMemoryWarning()
  @objc deinit
  override public init(style: UIKit.UITableView.Style)
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
}
public protocol TermsConditionsViewControllerDelegate {
  func didTapAccept()
}
@objc @_hasMissingDesignatedInitializers public class TermsConditionsViewController : UIKit.UIViewController {
  final public let locationManager: CoreLocation.CLLocationManager
  public var delegate: DIGIPROSDKUI.TermsConditionsViewControllerDelegate!
  @objc @IBAction public func selectedButton(radioButton: DIGIPROSDK.DLRadioButton)
  @objc dynamic public init()
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewWillTransition(to size: CoreGraphics.CGSize, with coordinator: UIKit.UIViewControllerTransitionCoordinator)
  @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  public func readTerms(_ file: Swift.String) -> Swift.String
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
}
extension TermsConditionsViewController {
  public func checkLocationPermission()
  public func openSettingApp(message: Swift.String)
}
@_hasMissingDesignatedInitializers public class CalculadoraManager {
  public static var shared: DIGIPROSDKUI.CalculadoraManager
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class CalculadoraViewController : UIKit.UIViewController, UIKit.UICollectionViewDataSource, UIKit.UICollectionViewDelegate, UIKit.UIScrollViewDelegate, UIKit.UITextFieldDelegate, UIKit.UIPickerViewDataSource, UIKit.UIPickerViewDelegate {
  @objc @IBOutlet weak public var newCollectionView: UIKit.UICollectionView!
  @objc @IBOutlet weak public var tableView: UIKit.UITableView!
  public var pickerProduct: UIKit.UIPickerView
  public var pickerConvenioGroup: UIKit.UIPickerView
  public var formDelegate: DIGIPROSDK.FormularioDelegate?
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @objc override dynamic public func viewWillTransition(to size: CoreGraphics.CGSize, with coordinator: UIKit.UIViewControllerTransitionCoordinator)
  public func refreshActionComponents()
  @objc public func scrollViewDidScroll(_ scrollView: UIKit.UIScrollView)
  @objc open func textFieldDidBeginEditing(_ textField: UIKit.UITextField)
  @objc open func textFieldDidEndEditing(_ textField: UIKit.UITextField)
  @objc open func textField(_ textField: UIKit.UITextField, shouldChangeCharactersIn range: Foundation.NSRange, replacementString string: Swift.String) -> Swift.Bool
  @objc public func scrollViewDidEndDecelerating(_ scrollView: UIKit.UIScrollView)
  @objc public func collectionView(_ collectionView: UIKit.UICollectionView, willDisplay cell: UIKit.UICollectionViewCell, forItemAt indexPath: Foundation.IndexPath)
  @objc public func collectionView(_ collectionView: UIKit.UICollectionView, didSelectItemAt indexPath: Foundation.IndexPath)
  @objc public func collectionView(_ collectionView: UIKit.UICollectionView, numberOfItemsInSection section: Swift.Int) -> Swift.Int
  @objc public func collectionView(_ collectionView: UIKit.UICollectionView, cellForItemAt indexPath: Foundation.IndexPath) -> UIKit.UICollectionViewCell
  @objc public func numberOfComponents(in pickerView: UIKit.UIPickerView) -> Swift.Int
  @objc public func pickerView(_ pickerView: UIKit.UIPickerView, numberOfRowsInComponent component: Swift.Int) -> Swift.Int
  @objc public func pickerView(_ pickerView: UIKit.UIPickerView, titleForRow row: Swift.Int, forComponent component: Swift.Int) -> Swift.String?
  @objc public func pickerView(_ pickerView: UIKit.UIPickerView, didSelectRow row: Swift.Int, inComponent component: Swift.Int)
  @objc public func pickerView(_ pickerView: UIKit.UIPickerView, viewForRow row: Swift.Int, forComponent component: Swift.Int, reusing view: UIKit.UIView?) -> UIKit.UIView
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension CalculadoraViewController : UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreGraphics.CGFloat
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, titleForHeaderInSection section: Swift.Int) -> Swift.String?
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, willDisplayHeaderView view: UIKit.UIView, forSection section: Swift.Int)
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
}
extension CalculadoraViewController : DIGIPROSDK.APIDelegate {
  @objc dynamic public func sendStatus(message: Swift.String, error: DIGIPROSDK.enumErrorType, isLog: Swift.Bool, isNotification: Swift.Bool)
  @objc dynamic public func sendStatusCodeMessage(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc dynamic public func didSendError(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc dynamic public func didSendResponse(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc dynamic public func didSendResponseHUD(message: Swift.String, error: DIGIPROSDK.enumErrorType, porcentage: Swift.Int)
  @objc dynamic public func sendStatusCompletition(initial: Swift.Float, current: Swift.Float, final: Swift.Float)
}
extension NuevaPlantillaViewController {
  public func resolveVisible(_ id: Swift.String, _ mode: Swift.String, _ string: Swift.String) -> Swift.Bool
  public func resolveVisibleContenido(_ id: Swift.String, _ mode: Swift.String, _ string: Swift.String) -> Swift.Bool
}
@objc @_inheritsConvenienceInitializers public class ModalViewController : Eureka.FormViewController, Eureka.TypedRowControllerType, UIKit.UINavigationControllerDelegate {
  public var row: Eureka.RowOf<Swift.String>!
  public var onDismissCallback: ((UIKit.UIViewController) -> ())?
  public func initForm(_ form: Eureka.Form, _ delegate: DIGIPROSDKUI.NuevaPlantillaViewController)
  public func setVisibleRows(_ visible: Swift.Bool)
  @objc override dynamic public func viewDidLoad()
  @objc deinit
  override public init(style: UIKit.UITableView.Style)
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  public typealias RowValue = Swift.String
}
extension NuevaPlantillaViewController {
  public func obtainConcat(_ element: Swift.String)
  public func obtainMathematics(_ element: Swift.String, _ isForced: Swift.Bool? = nil)
}
@objc @_hasMissingDesignatedInitializers public class DangerAlertViewController : UIKit.UIViewController {
  @objc override dynamic public func viewDidLoad()
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
}
extension DangerAlertViewController {
  public func show(in viewcontroller: UIKit.UIViewController, title: Swift.String?, description: Swift.String?, textButton: Swift.String?, imageAlert: UIKit.UIImage?, colorBanner: UIKit.UIColor?, colorButton: UIKit.UIColor?, colorText: UIKit.UIColor?, completion: (() -> ())? = nil)
}
public protocol RequestSuccessControllerDelegate {
  func didTapSave()
}
@objc @_hasMissingDesignatedInitializers public class RequestSuccessController : UIKit.UIViewController {
  public var delegate: DIGIPROSDKUI.RequestSuccessControllerDelegate!
  public var folioEconsubanco: Swift.String
  public var titlePage: Swift.String
  @objc override dynamic public func viewDidLoad()
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
}
@objc @_inheritsConvenienceInitializers public class SixViewController : UIKit.UIViewController, UIKit.UIApplicationDelegate {
  @objc override dynamic public func viewDidLoad()
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension NuevaPlantillaViewController {
  public func obtainModal(_ element: Swift.String) -> DIGIPROSDK.Promise<Swift.Bool>
}
@objc @_inheritsConvenienceInitializers public class FiveViewController : UIKit.UIViewController, UIKit.UIApplicationDelegate {
  @objc override dynamic public func viewDidLoad()
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
@objc @_inheritsConvenienceInitializers public class NuevoFEViewController : UIKit.UIViewController, UIKit.UITableViewDelegate, UIKit.UITableViewDataSource, DIGIPROSDK.APIDelegate {
  public var dataviewDelegate: DIGIPROSDK.ControllerDelegate?
  @objc public func sendStatus(message: Swift.String, error: DIGIPROSDK.enumErrorType, isLog: Swift.Bool, isNotification: Swift.Bool)
  @objc public func sendStatusCompletition(initial: Swift.Float, current: Swift.Float, final: Swift.Float)
  @objc public func sendStatusCodeMessage(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendToServerFormatos()
  public func isVisibleHUD()
  @objc public func didSendError(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponse(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponseHUD(message: Swift.String, error: DIGIPROSDK.enumErrorType, porcentage: Swift.Int)
  public func performNewPlantilla()
  @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @objc override dynamic public func viewDidLoad()
  public func initAsync()
  public func getStoredPlantillas()
  @objc public func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @objc public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @objc public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc public func tableView(_ tableView: UIKit.UITableView, canEditRowAt indexPath: Foundation.IndexPath) -> Swift.Bool
  @objc public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
  @objc public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreGraphics.CGFloat
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension DataViewController {
  public func detectPermissionNewFormat()
  public func detectPermissionVisualizeMap()
  public func permissionToSeeTutorial(_ isPermitted: Swift.Bool = true)
  public func detectIfHasNewFormat()
  public func settingContraints()
  public func setLoaderBottomAnimation(_ isVisible: Swift.Bool = false)
  @objc dynamic public func userNotificationCenter(_ center: UserNotifications.UNUserNotificationCenter, willPresent notification: UserNotifications.UNNotification, withCompletionHandler completionHandler: @escaping (UserNotifications.UNNotificationPresentationOptions) -> Swift.Void)
  public func adaptivePresentationStyle(for controller: UIKit.UIPresentationController, traitCollection: UIKit.UITraitCollection) -> UIKit.UIModalPresentationStyle
  public func sendNotification(title: Swift.String, subtitle: Swift.String, body: Swift.String, badge: Foundation.NSNumber)
  public func configureViewBeforeVisualization()
}
extension NuevaPlantillaViewController {
  public func showNotifOrPopupAlert(_ type: Swift.String, _ value: Swift.String)
  public func resolvingAllCondition(_ conditions: DIGIPROSDK.AEXMLElement, _ element: Swift.String? = nil, _ vrb: Swift.String? = nil, _ forced: Swift.Bool? = nil) -> Swift.Bool
  public func resolvingAnyCondition(_ conditions: DIGIPROSDK.AEXMLElement, _ element: Swift.String? = nil, _ vrb: Swift.String? = nil, _ forced: Swift.Bool? = nil) -> Swift.Bool
  public func resolveCondition(_ condition: DIGIPROSDK.AEXMLElement, _ element: Swift.String? = nil, _ vrb: Swift.String? = nil, _ forced: Swift.Bool? = nil) -> Swift.Bool
  public func resolvingConditionElement(_ vrbRule: Swift.String, _ element: Swift.String? = nil, _ subject: DIGIPROSDK.AEXMLElement) -> Swift.Bool
  public func resolvingAllActions(_ actions: DIGIPROSDK.AEXMLElement, _ conditionsTable: [DIGIPROSDK.AEXMLElement]? = nil)
  public func resolveAction(_ condition: DIGIPROSDK.AEXMLElement, _ conditionTable: [DIGIPROSDK.AEXMLElement]? = nil)
  public func valuesAllRowsTable(valueTable: [(record: Swift.Int, json: Swift.String)], condition: DIGIPROSDK.AEXMLElement, isAll: Swift.Bool) -> Swift.Bool
  public func valueElementRow(_ idElem: Swift.String) -> Swift.String
  public func valueVarUsr(_ varUsr: Swift.String) -> Swift.String
  public func valueByType(_ subject: DIGIPROSDK.AEXMLElement, _ elementsRow: Foundation.NSMutableDictionary? = nil) -> Swift.String
  public func valueMetaElementRow(_ idElem: Swift.String) -> Swift.String
}
@objc @_inheritsConvenienceInitializers public class NotificationsCellController : UIKit.UITableViewCell {
  @objc deinit
  @available(iOS 3.0, *)
  @objc override dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
@objc @_inheritsConvenienceInitializers public class EstaticosViewController : UIKit.UIViewController {
  public var estaticos: [(title: Swift.String, value: Swift.String)]
  public var device: DIGIPROSDK.Device?
  public var controller: DIGIPROSDKUI.NuevaPlantillaViewController?
  @objc override dynamic public func viewDidLoad()
  @objc public func refresh()
  @objc override dynamic public func didReceiveMemoryWarning()
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension EstaticosViewController : UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @objc dynamic public func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreGraphics.CGFloat
}
@objc @_inheritsConvenienceInitializers public class ConsultasFormViewController : Eureka.FormViewController, DIGIPROSDK.APIDelegate {
  @objc public func sendStatus(message: Swift.String, error: DIGIPROSDK.enumErrorType, isLog: Swift.Bool, isNotification: Swift.Bool)
  @objc public func sendStatusCompletition(initial: Swift.Float, current: Swift.Float, final: Swift.Float)
  @objc public func sendStatusCodeMessage(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendError(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponse(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponseHUD(message: Swift.String, error: DIGIPROSDK.enumErrorType, porcentage: Swift.Int)
  public var reporte: DIGIPROSDK.FETipoReporte?
  @objc @IBOutlet public var titleLabel: UIKit.UILabel!
  @objc @IBOutlet public var backButton: UIKit.UIButton!
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  public func gettingFields()
  public func search()
  @objc override dynamic public func didReceiveMemoryWarning()
  @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @objc deinit
  override public init(style: UIKit.UITableView.Style)
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
}
@objc @_inheritsConvenienceInitializers public class ThirdViewController : UIKit.UIViewController, UIKit.UIApplicationDelegate {
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @objc override dynamic public func didReceiveMemoryWarning()
  @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension NuevaPlantillaViewController {
  public func getSystemParameters(_ sysName: Swift.String) -> [Swift.String : Swift.String]
  public func obtainJson(id: Swift.String) -> Foundation.NSMutableDictionary?
  public func servicioGenericoJSON(_ element: Swift.String)
  public func saveFormat(feFormato: Swift.String)
  public func servicioGenerico(_ element: Swift.String)
  public func servicioPDF(_ element: Swift.String, _ action: Swift.String)
  public func servicioPDFpublicado(_ element: Swift.String)
}
extension NotificationsViewController : DIGIPROSDK.APIDelegate {
  @objc dynamic public func sendStatus(message: Swift.String, error: DIGIPROSDK.enumErrorType, isLog: Swift.Bool, isNotification: Swift.Bool)
  @objc dynamic public func sendStatusCompletition(initial: Swift.Float, current: Swift.Float, final: Swift.Float)
  @objc dynamic public func sendStatusCodeMessage(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc dynamic public func didSendError(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc dynamic public func didSendResponse(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc dynamic public func didSendResponseHUD(message: Swift.String, error: DIGIPROSDK.enumErrorType, porcentage: Swift.Int)
}
public typealias v2CB = (Foundation.NSString) -> ()
@objc @_inheritsConvenienceInitializers public class NotificationsViewController : UIKit.UIViewController, UIKit.UINavigationControllerDelegate {
  public var completionBlock: DIGIPROSDKUI.v2CB?
  public var proyecto: Swift.String
  public var imgBaner: Swift.String
  public var colorNew: UIKit.UIColor
  public var colorCard: UIKit.UIColor
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func didReceiveMemoryWarning()
  @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension NotificationsViewController : UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @objc dynamic public func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForHeaderInSection section: Swift.Int) -> CoreGraphics.CGFloat
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, viewForHeaderInSection section: Swift.Int) -> UIKit.UIView?
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreGraphics.CGFloat
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, trailingSwipeActionsConfigurationForRowAt indexPath: Foundation.IndexPath) -> UIKit.UISwipeActionsConfiguration?
}
@objc @_inheritsConvenienceInitializers public class ResultadosConsultasDataCell : UIKit.UITableViewCell {
  @objc deinit
  @available(iOS 3.0, *)
  @objc override dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
@objc @_inheritsConvenienceInitializers public class ResultadosConsultasViewController : UIKit.UIViewController, DIGIPROSDK.APIDelegate, UIKit.UITextFieldDelegate {
  @objc public func sendStatus(message: Swift.String, error: DIGIPROSDK.enumErrorType, isLog: Swift.Bool, isNotification: Swift.Bool)
  @objc public func sendStatusCompletition(initial: Swift.Float, current: Swift.Float, final: Swift.Float)
  @objc public func sendStatusCodeMessage(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendError(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponse(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponseHUD(message: Swift.String, error: DIGIPROSDK.enumErrorType, porcentage: Swift.Int)
  public var json: Swift.String
  public var reporte: DIGIPROSDK.FETipoReporte?
  public var consulta: DIGIPROSDK.FEConsultaTemplate?
  public var dictionary: [[(key: Swift.String, value: Any)]]?
  public var backupDictionary: [[(key: Swift.String, value: Any)]]?
  public var filteredDictionary: [[(key: Swift.String, value: Any)]]?
  public var filters: [Swift.String]
  public var paginations: [Swift.String]
  public var isSearching: Swift.Bool
  public var globalFilter: Swift.String
  @objc @IBOutlet public var titleLabel: UIKit.UILabel!
  @objc @IBOutlet public var backButton: UIKit.UIButton!
  @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @objc override dynamic public func didReceiveMemoryWarning()
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension ResultadosConsultasViewController : UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @objc dynamic public func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreGraphics.CGFloat
}
extension ResultadosConsultasViewController : UIKit.UISearchBarDelegate {
  @objc dynamic public func searchBarTextDidBeginEditing(_ searchBar: UIKit.UISearchBar)
  @objc dynamic public func searchBar(_ searchBar: UIKit.UISearchBar, textDidChange searchText: Swift.String)
}
extension ResultadosConsultasViewController : UIKit.UIPickerViewDelegate, UIKit.UIPickerViewDataSource {
  @objc dynamic public func numberOfComponents(in pickerView: UIKit.UIPickerView) -> Swift.Int
  @objc dynamic public func pickerView(_ pickerView: UIKit.UIPickerView, numberOfRowsInComponent component: Swift.Int) -> Swift.Int
  @objc dynamic public func pickerView(_ pickerView: UIKit.UIPickerView, titleForRow row: Swift.Int, forComponent component: Swift.Int) -> Swift.String?
  @objc dynamic public func pickerView(_ pickerView: UIKit.UIPickerView, viewForRow row: Swift.Int, forComponent component: Swift.Int, reusing view: UIKit.UIView?) -> UIKit.UIView
  @objc dynamic public func pickerView(_ pickerView: UIKit.UIPickerView, didSelectRow row: Swift.Int, inComponent component: Swift.Int)
}
extension ResultadosConsultasViewController : DIGIPROSDKUI.PagingTableViewDelegate {
  @objc dynamic public func paginate(_ tableView: DIGIPROSDKUI.PagingTableView, to page: Swift.Int)
}
@objc public protocol PagingTableViewDelegate {
  @objc optional func didPaginate(_ tableView: DIGIPROSDKUI.PagingTableView, to page: Swift.Int)
  @objc func paginate(_ tableView: DIGIPROSDKUI.PagingTableView, to page: Swift.Int)
}
@objc @_inheritsConvenienceInitializers public class PagingTableView : UIKit.UITableView {
  public var currentPage: Swift.Int {
    get
  }
  weak public var pagingDelegate: DIGIPROSDKUI.PagingTableViewDelegate? {
    get
    set(value)
  }
  public var isLoading: Swift.Bool {
    get
    set(value)
  }
  public func reset()
  @objc override dynamic public func dequeueReusableCell(withIdentifier identifier: Swift.String, for indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc deinit
  @objc override dynamic public init(frame: CoreGraphics.CGRect, style: UIKit.UITableView.Style)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension NuevaPlantillaViewController {
  public func resolveHabilitado(_ id: Swift.String, _ mode: Swift.String, _ string: Swift.String) -> Swift.Bool
}
@objc @_inheritsConvenienceInitializers public class DebugFormViewController : UIKit.UIViewController {
  public var delegate: DIGIPROSDKUI.NuevaPlantillaViewController?
  public var forms: [Eureka.Form]
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func didReceiveMemoryWarning()
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension DebugFormViewController : UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreGraphics.CGFloat
}
extension DebugFormViewController : UIKit.UISearchBarDelegate {
  @objc dynamic public func searchBarSearchButtonClicked(_ searchBar: UIKit.UISearchBar)
}
@objc @_inheritsConvenienceInitializers public class DebugDetailViewController : UIKit.UIViewController {
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func didReceiveMemoryWarning()
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
@objc @_inheritsConvenienceInitializers public class NewFirstViewController : UIKit.UIViewController, UIKit.UIApplicationDelegate, UserNotifications.UNUserNotificationCenterDelegate {
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension NewFirstViewController : UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @objc dynamic public func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreGraphics.CGFloat
}
extension NuevaPlantillaViewController {
  public func executeRulesOnProperties(indexPage: Swift.Int)
  public func setRuleByRowInForms(_ id: Swift.String, _ vrb: Swift.String, _ condition: DIGIPROSDK.AEXMLElement)
  public func settingRules() -> Swift.Bool
  public func obtainRules(rString rlString: Swift.String? = nil, eString element: Swift.String? = nil, vString vrb: Swift.String? = nil, forced isForced: Swift.Bool? = nil, override isOverrided: Swift.Bool? = nil) -> DIGIPROSDK.Promise<Swift.Bool>
}
extension NuevaPlantillaViewController {
  public func resolveTablePermissions(_ id: Swift.String, _ mode: Swift.String, _ string: Swift.String) -> Swift.Bool
}
@objc @_inheritsConvenienceInitializers public class ConsultasViewController : UIKit.UIViewController, DIGIPROSDK.APIDelegate, UIKit.UINavigationControllerDelegate {
  @objc public func sendStatus(message: Swift.String, error: DIGIPROSDK.enumErrorType, isLog: Swift.Bool, isNotification: Swift.Bool)
  @objc public func sendStatusCompletition(initial: Swift.Float, current: Swift.Float, final: Swift.Float)
  @objc public func sendStatusCodeMessage(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendError(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponse(message: Swift.String, error: DIGIPROSDK.enumErrorType)
  @objc public func didSendResponseHUD(message: Swift.String, error: DIGIPROSDK.enumErrorType, porcentage: Swift.Int)
  @objc @IBOutlet public var tableview: UIKit.UITableView!
  @objc @IBOutlet public var titleLabel: UIKit.UILabel!
  public var dataviewDelegate: DIGIPROSDK.ControllerDelegate?
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @objc override dynamic public func didReceiveMemoryWarning()
  @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension ConsultasViewController : UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @objc dynamic public func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreGraphics.CGFloat
}
extension ConsultasViewController : DIGIPROSDK.DZNEmptyDataSetSource, DIGIPROSDK.DZNEmptyDataSetDelegate {
  @objc dynamic public func title(forEmptyDataSet scrollView: UIKit.UIScrollView) -> Foundation.NSAttributedString?
  @objc dynamic public func description(forEmptyDataSet scrollView: UIKit.UIScrollView) -> Foundation.NSAttributedString?
  @objc dynamic public func image(forEmptyDataSet scrollView: UIKit.UIScrollView) -> UIKit.UIImage?
  @objc dynamic public func buttonTitle(forEmptyDataSet scrollView: UIKit.UIScrollView, for state: UIKit.UIControl.State) -> Foundation.NSAttributedString?
}
extension NuevaPlantillaViewController {
  public func resolveRequerido(_ id: Swift.String, _ mode: Swift.String, _ string: Swift.String) -> Swift.Bool
}
